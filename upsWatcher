#!/usr/bin/env python
# Query the ups.status from upsc and send it
# to zabbix.
#
# The is no error checking in this script!


# How often to poll the UPS and report status in seconds.
poll_interval = 15

# The name of the UPS to monitor.  Should be listed 
# under `upsc -l`.
ups_name = 'Powerware5110'

# The host running the zabbix-server.
zabbix_server = '192.168.0.100'

# The name of the Zabbix host being monitored.
zabbix_host = 'ups1'

# The key of the monitored host.
zabbix_key = 'ups.status'

# A mapping of output from upsc/nut to values being sent to Zabbix.
# Note: only 'OB and 'OL' are certain.
output_map = {'OB LB': '0', 'OB': '1', 'OL CHRG': '2', 'OL': '3'}

# Unknown status returned.
unknown_status = '4'

import subprocess
import time

while True:
  #Query nut for the one value.  Should return a single line.
  upsc = subprocess.Popen(['upsc', ups_name, 'ups.status'],stdout=subprocess.PIPE)
  while True:
    # We only care about one line.
    line = upsc.stdout.readline().rstrip()

    # Command should have exited, if not kill it.
    try:
      if not upsc.poll():
        upsc.kill()
    except:
      print "Unexpected error:", sys.exc_info()[0]
#    except Error:
#      print "Error: ", e

    print "Line: ", line
  
    # Check we understand this.
    if line in output_map.keys():
      value = output_map[line]
    else:
      value = unknown_status

    break

  # Report status back.
  subprocess.call(['zabbix_sender', '-z', zabbix_server, '-s', zabbix_host, '-k', zabbix_key, '-o', value])
  

  # Sleep until next time.
  time.sleep(poll_interval)

